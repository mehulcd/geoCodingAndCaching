/**
 * 
 */
package com.valbo.data.model;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
//import org.springframework.data.jpa.repository.config.EnableJpaRepositories;

import com.amazonaws.auth.AWSCredentials;
import com.amazonaws.auth.BasicAWSCredentials;
import com.amazonaws.regions.Region;
import com.amazonaws.regions.Regions;
import com.amazonaws.services.dynamodbv2.AmazonDynamoDB;
import com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper;

/**
 * @author mdodia
 *
 */
@Configuration
//@EnableJpaRepositories
  //(basePackages = "com.valbo.data.model")
public class DynamoDBConfig {
	 
    @Value("${amazon.aws.accesskey}")
    private String amazonAWSAccessKey;
 
    @Value("${amazon.aws.secretkey}")
    private String amazonAWSSecretKey;
    
    @Value("${cloud.aws.region.static}")
    private String amazonAWSRegion;
 
    @Bean
    public AmazonDynamoDB amazonDynamoDB() {
        AmazonDynamoDB amazonDynamoDB 
          = new AmazonDynamoDBClient(amazonAWSCredentials());
        Region usWest2 = Region.getRegion(Regions.US_WEST_2);
		amazonDynamoDB.setRegion(usWest2);
        return amazonDynamoDB;
    }
 
    @Bean
    public AWSCredentials amazonAWSCredentials() {
        return new BasicAWSCredentials(
          amazonAWSAccessKey, amazonAWSSecretKey);
    }
    
    @Bean
    public DynamoDBMapper dynamoDBMapper () {
    
        DynamoDBMapper dynamoDBMapper = new DynamoDBMapper(amazonDynamoDB());
        return dynamoDBMapper;
    }
}
