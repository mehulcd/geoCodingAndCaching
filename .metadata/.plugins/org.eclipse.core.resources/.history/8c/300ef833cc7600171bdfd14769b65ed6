/**
 * 
 */
package com.valbo.data.service;

import java.util.Iterator;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.valbo.data.model.GoogleGeoCodeResponse;
import com.valbo.data.model.Location;
import com.valbo.data.model.Record;

/**
 * @author mdodia
 *
 */
@Service
public class AddressService {

	@Value("${google.geocode.key}")
	private String googleGeoCodeKey;

	@Value("${google.geocode.url}")
	private String googleGeoCodeURL;

	public Location getGEOCodedAddress(List<String> geoCodes) {

		Location record = new Location();
		String geoCodeURI = geoCodes.get(0) + ","
				+ geoCodes.get(1);
		String uri = googleGeoCodeURL + "?" + "latlng=" + geoCodeURI + "&" + "key=" + googleGeoCodeKey;
		return getGeoLocation (uri, record);
	}
	
	@SuppressWarnings("finally")
	private Location getGeoLocation (String url, Location location) {
		
		RestTemplate restTemplate = new RestTemplate();

		GoogleGeoCodeResponse response = restTemplate.getForObject(url, GoogleGeoCodeResponse.class);
		ObjectMapper objectMapper = new ObjectMapper();

//		try {
//			JsonNode root = objectMapper.readTree(response);
//			if (root != null && "OK".equals(root.get("status").asText())) {
//				JsonNode results = root.path("results");
//				Iterator<JsonNode> elements = results.elements();
//				while (elements.hasNext()) {
//					JsonNode temp = elements.next();
//					JsonNode location = temp.path("geometry").get("location");
//					record.setLatitude(location.get("lat").toString());
//					record.setLongitude(location.get("lng").toString());
//					System.out.format("Latitude & Longitude : %s %s", record.getLatitude(), record.getLongitude());
//				}
//			}
//		} catch (Exception e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		} finally {
//			return record;
//		}
		
		return new Location ();
	}

}
